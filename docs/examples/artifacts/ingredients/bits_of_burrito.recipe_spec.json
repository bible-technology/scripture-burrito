{
    "name": {
        "en": "Bits of Burrito"
    },
    "description": {
        "en": "We dice our burritos finely"
    },
    "metadata": {
        "identification": {
            "name": {
                "en": "Some Finely-Diced Demo Burrito",
                "fr": "De petits morceaux d'une cr\u00eape mexicaine biblique surdimensionn\u00e9e anonyme"
            }
        }
    },
    "variables": [
	{
            "name": "aFlag",
            "dataType": "boolean",
	    "value": ["lit", true]
        },
	{
            "name": "aNumber",
            "dataType": "number",
	    "value": ["length", ["lit", [2, 4, 6]]]
        },
	{
            "name": "aString",
            "dataType": "string",
	    "value": ["substring", ["toString", ["lit", 9456.32]], ["length", ["lit", [2, 4, 6]]], ["lit", 4]]
        },
	{
	    "name": "anArray",
	    "dataType": ["array", "string"],
	    "value": ["lit", ["x", "y", "z"]]
	},
	{
	    "name": "anObject",
	    "dataType": ["object", "string"],
	    "value": ["lit", {"foo": "baa"}]
	},
	{
	    "name": "someJson",
	    "dataType": "json",
	    "value": ["json", {"a": [1, true, "false"], "b": null}]
	}
    ],
    "assembleContent": [
            {
            "stepType": "message",
            "text": "A debugging message - Assemble Content Here"
        }
    ],
    "assembleRecipe": [
	{
	    "stepType": "variables",
	    "variables": [
		{
		    "name": "aNumber",
		    "dataType": "boolean",
		    "value": [
			"xor",
			[
			    "or",
			    [
				["lit", false],
				["get", ["lit", "aFlag"]]
			    ]
			],
			[
			    "and",
			    [
				["lit", false],
				["lit", true],
				["reMatches", ["lit", "^[abc]+$"], ["concat", [["lit", "aba"], ["char", ["lit", "babc"], ["lit", 2]]]]]
			    ]
			]
		    ]
		}
	    ],
	    "sequence": [
		{
		    "stepType": "ifThenElse",
		    "if": ["not", ["eq", ["abs", ["lit", 5]], ["lit", 5.0]]],
		    "then": [
			{
			    "stepType": "message",
			    "text": "Then Sequence"
			}
		    ],
		    "else": [
			{
			    "stepType": "message",
			    "text": "Optional Else Sequence"
			}
		    ]
		}
	    ]
	},
	{
	    "stepType": "variables",
	    "variables": [
		{
		    "name": "aNumber",
		    "dataType": "number",
		    "value": [
			"sum",
			[
			    ["lit", 2],
			    ["lit", 4],
			    [
				"mul",
				[
				    ["lit", 5],
				    [
					"max",
					[
					    ["toNumber", ["lit", "149"]],
					    ["min",
					     [
						 ["lit", 1],
						 ["lit", 0.4]
					     ]
					    ]
					]
				    ]
				]
			    ]
			]
		    ]
		},
		{
		    "name": "anotherNumber",
		    "dataType": "number",
		    "value": [
			"sub",
			[
			    "div",
			    ["lit", 25],
			    ["lit", 5]
			],
			[
			    "idiv",
			    [
				"pow",
				["lit", 23],
				["lit", 3]
			    ],
			    [
				"mod",
				["lit", 14],
				["lit", 4]
			    ]
			]
		    ]
		}
	    ],
	    "sequence": [
		{
		    "stepType": "case",
		    "clauses": [
			{
			    "when": [
				"and",
				[
				    [
					"gt",
					["lit", "ball"],
					["lit", "cat"]
				    ],
				    [
					"in",
					["lit", "p"],
					["lit", "apple"]
				    ],
				    [
					"not",
					[
					    "in",
					    ["lit", 3],
					    ["lit", [1, 4, 9]]
					]
				    ]
				]
			    ],
			    "sequence": [
				{
				    "stepType": "message",
				    "text": "First Case Clause Sequence"
				}
			    ]
			},
			{
			    "when": ["not", ["lit", false]],
			    "sequence": [
				{
				    "stepType": "message",
				    "text": "Second Case Clause Sequence"
				}
			    ]
			}
		    ],
		    "otherwise": [
			{
			    "stepType": "message",
			    "text": "Optional Otherwise Sequence"
			}
		    ]
		}
	    ]
	},
        {
            "stepType": "forItems",
            "itemVariable": {
                "name": "foo",
                "dataType": "number"
	    },
            "array": [
		"lit", [
                    1,
                    3,
                    5
		]
            ],
            "sequence": [
                {
                    "stepType": "message",
                    "text": "Sequence for Item {['var', 'foo']}"
                }
            ]
        },
        {
            "stepType": "forKeyValues",
            "keyVariable": {
                "name": "foo",
                "dataType": "string"
            },
            "valueVariable": {
                "name": "foo",
                "dataType": "boolean"
            },
            "object": [
		"lit",
		{
                    "fee": false,
                    "fi": false,
                    "foe": true
		}
	    ],
            "sequence": [
                {
                    "stepType": "message",
                    "text": "Sequence for Item {['var', 'foo']}"
                }
            ]
        },
        {
            "stepType": "callback",
            "primitive": "funkyCallbackFunction",
            "arguments": []
        }
    ]
}
